# Generated by Django 3.1.7 on 2021-04-22 08:17

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AttributeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Attribute type',
                'verbose_name_plural': 'Attribute types',
            },
        ),
        migrations.CreateModel(
            name='BlockCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Block category',
                'verbose_name_plural': 'Block categories',
            },
        ),
        migrations.CreateModel(
            name='Script',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('script', models.TextField(blank=True, verbose_name='script')),
                ('url_path', models.URLField(blank=True, verbose_name='url path')),
            ],
            options={
                'verbose_name': 'Script',
                'verbose_name_plural': 'Scripts',
            },
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('style', models.TextField(blank=True, verbose_name='style')),
                ('url_path', models.URLField(blank=True, verbose_name='url path')),
            ],
            options={
                'verbose_name': 'Style',
                'verbose_name_plural': 'Styles',
            },
        ),
        migrations.CreateModel(
            name='TemplateCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('description', models.TextField(max_length=500, verbose_name='description')),
                ('image', models.ImageField(blank=True, upload_to='', verbose_name='image')),
            ],
            options={
                'verbose_name': 'Template Category',
                'verbose_name_plural': 'Template Categories',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('slug', models.SlugField(default='')),
                ('description', models.TextField(max_length=500, verbose_name='description')),
                ('html_content', models.TextField(verbose_name='html content')),
                ('image', models.ImageField(blank=True, upload_to='', verbose_name='image')),
                ('is_public', models.BooleanField(default=False, verbose_name='is public')),
                ('is_premium', models.BooleanField(default=False, verbose_name='is premium')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='builder.templatecategory', verbose_name='category')),
                ('scripts', models.ManyToManyField(blank=True, to='builder.Script', verbose_name='scripts')),
                ('styles', models.ManyToManyField(blank=True, to='builder.Style', verbose_name='styles')),
            ],
            options={
                'verbose_name': 'Template',
                'verbose_name_plural': 'Templates',
            },
        ),
        migrations.CreateModel(
            name='BlockAttributes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=128, verbose_name='value')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builder.attributetype', verbose_name='type')),
            ],
            options={
                'verbose_name': 'BlockAttribute',
                'verbose_name_plural': 'BlockAttributes',
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('image', models.ImageField(blank=True, upload_to='', verbose_name='image')),
                ('html_content', models.TextField(verbose_name='html content')),
                ('attributes', models.ManyToManyField(blank=True, to='builder.BlockAttributes', verbose_name='attributes')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='builder.blockcategory', verbose_name='category')),
                ('style', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blocks', to='builder.style')),
            ],
            options={
                'verbose_name': 'Block',
                'verbose_name_plural': 'Blocks',
            },
        ),
    ]
